{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Documents\\\\Bootcamp\\\\Spring\\\\premier-zone\\\\Frontend\\\\src\\\\components\\\\Nation\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Loader from \"react-loaders\";\nimport { Link } from 'react-router-dom';\nimport \"./index.scss\";\nimport AnimatedLetters from \"../AnimatedLetters\";\nimport { ReactCountryFlag } from 'react-country-flag';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Nations = () => {\n  _s();\n  const [letterClass, setLetterClass] = useState('text-animate');\n  const [nations, setNations] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [filteredNations, setFilteredNations] = useState([]);\n\n  // Animate letters\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setLetterClass(\"text-animate-hover\");\n    }, 3000);\n    return () => clearTimeout(timer);\n  }, []);\n\n  // Fetch all nations from backend\n  useEffect(() => {\n    fetch(\"http://localhost:8080/api/v1/nation\").then(res => {\n      if (!res.ok) throw new Error(\"Failed to fetch nations\");\n      return res.json();\n    }).then(data => {\n      setNations(data);\n      setLoading(false);\n    }).catch(err => {\n      console.error(err);\n      setLoading(false);\n    });\n  }, []);\n\n  // Filter nations based on search\n  useEffect(() => {\n    const filtered = nations.filter(nation => nation.name.toLowerCase().includes(searchQuery.toLowerCase()));\n    setFilteredNations(filtered);\n  }, [searchQuery, nations]);\n  const handleSearchChange = event => {\n    setSearchQuery(event.target.value);\n  };\n  const renderCountryFlags = countries => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"images-container\",\n    children: countries.map((country, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-box\",\n      children: [/*#__PURE__*/_jsxDEV(ReactCountryFlag, {\n        countryCode: country.code,\n        svg: true,\n        style: {\n          width: '100%',\n          height: '100%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"title\",\n          children: country.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          className: \"btn\",\n          to: `/data?nation=${encodeURIComponent(country.name)}`,\n          children: \"View Players\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this)]\n    }, idx, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading nations...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container nation-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"page-title\",\n        children: /*#__PURE__*/_jsxDEV(AnimatedLetters, {\n          letterClass: letterClass,\n          strArray: \"Nations\".split(\"\"),\n          idx: 15\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-bar\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search for countries\",\n          value: searchQuery,\n          onChange: handleSearchChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: renderCountryFlags(filteredNations)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Loader, {\n      type: \"pacman\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Nations, \"XynnWqx7ea/s3s9a3Ccr2RejB/Q=\");\n_c = Nations;\nexport default Nations;\nvar _c;\n$RefreshReg$(_c, \"Nations\");","map":{"version":3,"names":["React","useEffect","useState","Loader","Link","AnimatedLetters","ReactCountryFlag","jsxDEV","_jsxDEV","Fragment","_Fragment","Nations","_s","letterClass","setLetterClass","nations","setNations","loading","setLoading","searchQuery","setSearchQuery","filteredNations","setFilteredNations","timer","setTimeout","clearTimeout","fetch","then","res","ok","Error","json","data","catch","err","console","error","filtered","filter","nation","name","toLowerCase","includes","handleSearchChange","event","target","value","renderCountryFlags","countries","className","children","map","country","idx","countryCode","code","svg","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","to","encodeURIComponent","strArray","split","type","placeholder","onChange","_c","$RefreshReg$"],"sources":["C:/Users/HP/Documents/Bootcamp/Spring/premier-zone/Frontend/src/components/Nation/index.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Loader from \"react-loaders\";\nimport { Link } from 'react-router-dom';\nimport \"./index.scss\";\nimport AnimatedLetters from \"../AnimatedLetters\";\nimport { ReactCountryFlag } from 'react-country-flag';\n\nconst Nations = () => {\n    const [letterClass, setLetterClass] = useState('text-animate');\n    const [nations, setNations] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [searchQuery, setSearchQuery] = useState('');\n    const [filteredNations, setFilteredNations] = useState([]);\n\n    // Animate letters\n    useEffect(() => {\n        const timer = setTimeout(() => {\n            setLetterClass(\"text-animate-hover\");\n        }, 3000);\n        return () => clearTimeout(timer);\n    }, []);\n\n    // Fetch all nations from backend\n    useEffect(() => {\n        fetch(\"http://localhost:8080/api/v1/nation\")\n            .then(res => {\n                if (!res.ok) throw new Error(\"Failed to fetch nations\");\n                return res.json();\n            })\n            .then(data => {\n                setNations(data);\n                setLoading(false);\n            })\n            .catch(err => {\n                console.error(err);\n                setLoading(false);\n            });\n    }, []);\n\n    // Filter nations based on search\n    useEffect(() => {\n        const filtered = nations.filter(nation =>\n            nation.name.toLowerCase().includes(searchQuery.toLowerCase())\n        );\n        setFilteredNations(filtered);\n    }, [searchQuery, nations]);\n\n    const handleSearchChange = event => {\n        setSearchQuery(event.target.value);\n    };\n\n    const renderCountryFlags = (countries) => (\n        <div className=\"images-container\">\n            {countries.map((country, idx) => (\n                <div key={idx} className=\"image-box\">\n                    <ReactCountryFlag\n                        countryCode={country.code}\n                        svg\n                        style={{ width: '100%', height: '100%' }}\n                    />\n                    <div className=\"content\">\n                        <p className=\"title\">{country.name}</p>\n                        <Link\n                            className=\"btn\"\n                            to={`/data?nation=${encodeURIComponent(country.name)}`}\n                        >\n                            View Players\n                        </Link>\n                    </div>\n                </div>\n            ))}\n        </div>\n    );\n\n    if (loading) return <p>Loading nations...</p>;\n\n    return (\n        <>\n            <div className=\"container nation-page\">\n                <h1 className=\"page-title\">\n                    <AnimatedLetters\n                        letterClass={letterClass}\n                        strArray={\"Nations\".split(\"\")}\n                        idx={15}\n                    />\n                </h1>\n\n                <div className=\"search-bar\">\n                    <input\n                        type=\"text\"\n                        placeholder=\"Search for countries\"\n                        value={searchQuery}\n                        onChange={handleSearchChange}\n                    />\n                </div>\n\n                <div>{renderCountryFlags(filteredNations)}</div>\n            </div>\n\n            <Loader type=\"pacman\" />\n        </>\n    );\n};\n\nexport default Nations;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}